{% schema %}
{
  "name": "Product Parts Collection",
  "settings": [
    {
      "type": "collection",
      "id": "selected_collection",
      "label": "Select Collection"
    }
  ],
  "blocks": [
    {
      "type": "tab",
      "name": "Tab",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "label": "Tab Text"
        },
        {
          "type": "url",
          "id": "url",
          "label": "Tab Link"
        },
        {
          "type": "checkbox",
          "id": "active",
          "label": "Set as Active"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Product Parts Collection",
      "blocks": [
        {
          "type": "tab",
          "settings": {
            "text": "All",
            "url": "#",
            "active": true
          }
        },
        {
          "type": "tab",
          "settings": {
            "text": "Range Rover",
            "url": "#",
            "active": false
          }
        },
        {
          "type": "tab",
          "settings": {
            "text": "Discovery",
            "url": "#",
            "active": false
          }
        },
        {
          "type": "tab",
          "settings": {
            "text": "Defender",
            "url": "#",
            "active": false
          }
        }
      ]
    }
  ]
}
{% endschema %}


{% assign collection = collections[section.settings.selected_collection] %}
<div class="page-width">
<div class="range-rover-section">

  <!-- Filters and Sorting Bar -->
<div class="top-bar-filter desktop-filters">
<div class="tabs parts-tabs">
  {% for block in section.blocks %}
    {% if block.type == 'tab' %}
      <a href="{{ block.settings.url }}" class="tab {% if block.settings.active %}active{% endif %}">
        {{ block.settings.text }}
      </a>
    {% endif %}
  {% endfor %}
</div>

    <div class="sort-dropdown">
      
      <select id="sort_by">
        <option value="">Sort by</option>
        <option value="newest-listing">Newest Listing</option>
        <option value="price-asc">Price, Low to High</option>
        <option value="price-desc">Price, High to Low</option>
      </select>
    </div>
  </div>
  <div class="top-bar-filter mobile-tablet-filters">
 <div class="dropdwn">
  <select onchange="if (this.value) window.location.href=this.value;">
  {% for block in section.blocks %}
    {% if block.type == 'tab' %}
      <option value="{{ block.settings.url }}" {% if block.settings.active %}selected{% endif %}>
        {{ block.settings.text }}
      </option>
    {% endif %}
  {% endfor %}
</select>
 </div>
        <div class="sort-dropdown">
      <select id="sort_by">
        <option value="">Sort by</option>
        <option value="newest-listing">Newest Listing</option>
        <option value="price-asc">Price, Low to High</option>
        <option value="price-desc">Price, High to Low</option>
      </select>
    </div>

  </div>

  <div class="border-lines"></div>


    {% if collection and collection.products.size > 0 %}
    {% assign latest_product = collection.products.first %}
    
    <!-- Latest Product Banner -->

    <!-- Product Grid -->
{% assign products = collections[section.settings.selected_collection].products %}
<div class="main_section_all parts_collections">

  <!-- Default: No sorting -->
  <div class="product-grid full-width-cards" id="sort-default">
    {% for product in products %}
      {% include 'product-card', product: product %}
    {% endfor %}
  </div>

  <!-- Price Ascending -->
  <div class="product-grid full-width-cards" id="sort-price-asc" style="display: none;">
    {% assign sorted_products_asc = products | sort: 'price' %}
    {% for product in sorted_products_asc %}
      {% include 'product-card', product: product %}
    {% endfor %}
  </div>

  <!-- Price Descending -->
  <div class="product-grid full-width-cards" id="sort-price-desc" style="display: none;">
    {% assign sorted_products_desc = products | sort: 'price' | reverse %}
    {% for product in sorted_products_desc %}
      {% include 'product-card', product: product %}
    {% endfor %}
  </div>

</div>  
    
    <div class="border-lines"></div>
    <div class="results-count">Showing {{ collection.products.size }} of {{ collection.products.size }} results</div>
    <div class="border-lines"></div>  
  {% else %}
    <p>No products found in this collection.</p>
  {% endif %}


</div>
</div>
      <script>
document.addEventListener('DOMContentLoaded', function () {
  const flipToBackButtons = document.querySelectorAll('.badge.lefts a');
  const flipToFrontButtons = document.querySelectorAll('.badge.rights a');

  // Flip to back
  flipToBackButtons.forEach(button => {
    button.addEventListener('click', function (e) {
      e.preventDefault();
      if (window.innerWidth <= 767) {
        const card = this.closest('.card');
        card.classList.remove('frontflipped');
        card.classList.add('flipped');
      }
    });
  });

  // Flip to front
  flipToFrontButtons.forEach(button => {
    button.addEventListener('click', function (e) {
      e.preventDefault();
      if (window.innerWidth <= 767) {
        const card = this.closest('.card');
        card.classList.remove('flipped');
        card.classList.add('frontflipped');
      }
    });
  });
});
</script>
<script>
document.addEventListener('DOMContentLoaded', function () {
  const sortBySelects = document.querySelectorAll('#sort_by');

  function updateSortView(sortValue) {
    const allGrids = ['sort-default', 'sort-price-asc', 'sort-price-desc'];
    allGrids.forEach(id => document.getElementById(id).style.display = 'none');

    switch (sortValue) {
      case 'price-asc':
        document.getElementById('sort-price-asc').style.display = 'flex';
        break;
      case 'price-desc':
        document.getElementById('sort-price-desc').style.display = 'flex';
        break;
      default:
        document.getElementById('sort-default').style.display = 'flex';
    }
  }

  sortBySelects.forEach(select => {
    select.addEventListener('change', function () {
      updateSortView(this.value);
    });
  });

  // Auto-select on page load if sort_by exists in URL
  const params = new URLSearchParams(window.location.search);
  const sortValue = params.get('sort_by') || '';
  if (sortValue) {
    document.querySelectorAll('#sort_by').forEach(select => {
      select.value = sortValue;
    });
    updateSortView(sortValue);
  } else {
    updateSortView('');
  }
});
</script>

