{% schema %}
{
  "name": "Product Collection",
  "settings": [
    {
      "type": "collection",
      "id": "selected_collection",
      "label": "Select Collection"
    }
  ],
  "blocks": [
    {
      "type": "tab",
      "name": "Tab",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "label": "Tab Text"
        },
        {
          "type": "collection",
          "id": "collection",
          "label": "Select Collection"
        },
        {
          "type": "checkbox",
          "id": "active",
          "label": "Set as Active"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Product Collection",
      "blocks": [
        {
          "type": "tab",
          "settings": {
            "text": "All",
            "collection": "",
            "active": true
          }
        },
        {
          "type": "tab",
          "settings": {
            "text": "Range Rover",
            "collection": "",
            "active": false
          }
        },
        {
          "type": "tab",
          "settings": {
            "text": "Discovery",
            "collection": "",
            "active": false
          }
        },
        {
          "type": "tab",
          "settings": {
            "text": "Defender",
            "collection": "",
            "active": false
          }
        }
      ]
    }
  ]
}
{% endschema %}

<div class="product-tabs-wrapper page-width">
  <!-- Tab Buttons -->
  <div class="tab-buttons">
    {% assign tab_index = 0 %}
    {% for block in section.blocks %}
      <button class="tab-button {% if block.settings.active %}active{% endif %}" data-tab="tab-{{ tab_index }}">
        {{ block.settings.text }}
      </button>
      {% assign tab_index = tab_index | plus: 1 %}
    {% endfor %}
  </div>

  <!-- Tab Contents -->
  <div class="tab-contents">
    {% assign tab_index = 0 %}
    {% for block in section.blocks %}
      {% assign collection_handle = block.settings.collection %}
      {% assign tab_active = block.settings.active %}
      {% assign collection = collections[collection_handle] %}

      <div class="tab-content {% if tab_active %}active{% endif %}" id="tab-{{ tab_index }}">
        {% if collection %}
          <h2>{{ collection.title }}</h2>
          <div class="products-grid">
            {% for product in collection.products %}
              <div class="product-card">
                <a href="{{ product.url }}">
                  <img src="{{ product.featured_image | img_url: 'medium' }}" alt="{{ product.title }}">
                  <p>{{ product.title }}</p>
                </a>
              </div>
            {% endfor %}
          </div>
        {% else %}
          <p>No collection selected.</p>
        {% endif %}
      </div>

      {% assign tab_index = tab_index | plus: 1 %}
    {% endfor %}
  </div>
</div>

<style>
  .tab-buttons {
    display: flex;
    gap: 10px;
    margin-bottom: 20px;
  }
  .tab-button {
    padding: 10px 20px;
    border: 1px solid #ccc;
    background: white;
    cursor: pointer;
  }
  .tab-button.active {
    background: #000;
    color: white;
  }
  .tab-content {
    display: none;
  }
  .tab-content.active {
    display: block;
  }
  .products-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    gap: 20px;
  }
  .product-card {
    text-align: center;
  }
  .product-card img {
    width: 100%;
    max-width: 200px;
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", function() {
    const tabButtons = document.querySelectorAll(".tab-button");
    const tabContents = document.querySelectorAll(".tab-content");

    tabButtons.forEach((button, index) => {
      button.addEventListener("click", () => {
        // Remove all active classes
        tabButtons.forEach(btn => btn.classList.remove("active"));
        tabContents.forEach(content => content.classList.remove("active"));

        // Add active to clicked
        button.classList.add("active");
        document.getElementById(`tab-${index}`).classList.add("active");
      });
    });
  });
</script>


      <script>
document.addEventListener('DOMContentLoaded', function () {
  const flipToBackButtons = document.querySelectorAll('.badge.lefts a');
  const flipToFrontButtons = document.querySelectorAll('.badge.rights a');

  // Flip to back
  flipToBackButtons.forEach(button => {
    button.addEventListener('click', function (e) {
      e.preventDefault();
      if (window.innerWidth <= 767) {
        const card = this.closest('.card');
        card.classList.remove('frontflipped');
        card.classList.add('flipped');
      }
    });
  });

  // Flip to front
  flipToFrontButtons.forEach(button => {
    button.addEventListener('click', function (e) {
      e.preventDefault();
      if (window.innerWidth <= 767) {
        const card = this.closest('.card');
        card.classList.remove('flipped');
        card.classList.add('frontflipped');
      }
    });
  });
});
</script>

